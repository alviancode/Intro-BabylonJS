{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["onSceneReady","scene","canvas","getEngine","getRenderingCanvas","camera","BABYLON","Math","PI","upperBetaLimit","attachControl","intensity","spriteManagerTrees","width","height","i","tree","position","x","random","z","y","skybox","CreateBox","size","skyboxMaterial","backFaceCulling","reflectionTexture","coordinatesMode","SKYBOX_MODE","diffuseColor","specularColor","material","loop","volume","autoplay","play","ground","CreateGroundFromHeightMap","subdivisions","minHeight","maxHeight","groundMat","diffuseTexture","createGround","house","createHouse","houses","createInstance","rotation","car","outline","push","cos","sin","faceUV","carMat","ExtrudePolygon","shape","depth","wrap","earcut","wheelUV","wheelMat","wheelRB","CreateCylinder","diameter","parent","wheelRF","clone","wheelLB","wheelLF","animWheel","ANIMATIONTYPE_FLOAT","ANIMATIONLOOPMODE_CYCLE","wheelKeys","frame","value","setKeys","animations","animCar","carKeys","beginAnimation","createCar","ImportMeshAsync","then","result","dude","meshes","walk","turn","dist","this","scaling","skeletons","track","rotate","Y","ToRadians","LOCAL","startRotation","rotationQuaternion","distance","p","onBeforeRenderObservable","add","movePOV","length","fountainOutline","CreateLathe","sideOrientation","DOUBLESIDE","particleSystem","particleTexture","emitter","minEmitBox","maxEmitBox","color1","color2","colorDead","minSize","maxSize","maxLifeTime","emitRate","blendMode","BLENDMODE_ONEONE","gravity","direction1","direction2","minAngularSpeed","maxAngularSpeed","minEmitPower","maxEmitPower","updateSpeed","start","generateFountain","roof","tessellation","roofMat","createRoof","box","boxMat","createBox","MergeMeshes","App","className","antialias","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAWA,SAASA,EAAaC,GACpB,IAAIC,EAASD,EAAME,YAAYC,qBAE3BC,EAAS,IAAIC,IAAwB,UAAWC,KAAKC,GAAK,EAC5DD,KAAKC,GAAK,IAAK,GAAI,IAAIF,IAAgB,EAAG,EAAG,GAAIL,GACnDI,EAAOI,eAAiBF,KAAKC,GAAK,IAClCH,EAAOK,cAAcR,GAAQ,GAEjB,IAAII,IAAyB,QAAS,IAAIA,IAAgB,EAAG,EAAG,GAAIL,GAC1EU,UAAY,GAKlB,IAHA,IAAIC,EAAqB,IAAIN,IAAsB,eAAgB,uBAAwB,IAAM,CAAEO,MAAO,IAAKC,OAAQ,MAAQb,GAGtHc,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAC5B,IAAMC,EAAO,IAAIV,IAAe,OAAQM,GACxCI,EAAKC,SAASC,GAAsB,GAAlBX,KAAKY,SACvBH,EAAKC,SAASG,EAAoB,GAAhBb,KAAKY,SAAgB,EACvCH,EAAKC,SAASI,EAAI,GAGpB,IAAK,IAAIN,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAC5B,IAAMC,EAAO,IAAIV,IAAe,OAAQM,GACxCI,EAAKC,SAASC,EAAqB,GAAjBX,KAAKY,SAAkB,EACzCH,EAAKC,SAASG,GAAqB,GAAjBb,KAAKY,SAAiB,EACxCH,EAAKC,SAASI,EAAI,GAKpB,IAAIC,EAAShB,IAAoBiB,UAAU,SAAU,CAAEC,KAAM,KAAOvB,GAChEwB,EAAiB,IAAInB,IAAyB,SAAUL,GAC5DwB,EAAeC,iBAAkB,EACjCD,EAAeE,kBAAoB,IAAIrB,IAAoB,wBAAyBL,GACpFwB,EAAeE,kBAAkBC,gBAAkBtB,IAAgBuB,YACnEJ,EAAeK,aAAe,IAAIxB,IAAe,EAAG,EAAG,GACvDmB,EAAeM,cAAgB,IAAIzB,IAAe,EAAG,EAAG,GACxDgB,EAAOU,SAAWP,EAEN,IAAInB,IAAc,QAAS,oBAAqBL,EAAO,KAAM,CACvEgC,MAAM,EACNC,OAAQ,GACRC,UAAU,IAENC,QAwEN,WACE,IAAIC,EAAS/B,IAAoBgC,0BAA0B,SAAU,iEAAkE,CACrIzB,MAAO,IACPC,OAAQ,IACRyB,aAAc,GACdC,UAAW,EACXC,UAAW,KAETC,EAAY,IAAIpC,IAAyB,aAC7CoC,EAAUC,eAAiB,IAAIrC,IAAgB,6DAE/CoC,EAAUZ,aAAe,IAAIxB,IAAe,EAAG,EAAG,GAClD+B,EAAOL,SAAWU,EAlFPE,GAAb,IAEIC,EAAQC,IACZD,EAAM5B,SAASG,GAAK,EAEpB,IAAI2B,EAAS,GAEbA,EAAO,GAAKF,EAAMG,eAAe,SACjCD,EAAO,GAAGE,SAAS5B,EAAI,GACvB0B,EAAO,GAAG9B,SAASC,GAAK,EACxB4B,IAAc7B,SAAW,IAAIX,IAAgB,EAAG,EAAG,GAEnD,IAAI4C,EAyEJ,WAOE,IANA,IAAMC,EAAU,CACd,IAAI7C,KAAiB,GAAK,GAAI,IAC9B,IAAIA,IAAgB,GAAK,GAAI,KAItBS,EAAI,EAAGA,EAAI,GAAIA,IACtBoC,EAAQC,KAAK,IAAI9C,IAAgB,GAAMC,KAAK8C,IAAItC,EAAIR,KAAKC,GAAK,IAAK,EAAG,GAAMD,KAAK+C,IAAIvC,EAAIR,KAAKC,GAAK,IAAM,KAI3G2C,EAAQC,KAAK,IAAI9C,IAAgB,EAAG,EAAG,KACvC6C,EAAQC,KAAK,IAAI9C,KAAiB,GAAK,EAAG,KAE1C,IAAIiD,EAAS,GACbA,EAAO,GAAK,IAAIjD,IAAgB,EAAG,GAAK,IAAM,GAC9CiD,EAAO,GAAK,IAAIjD,IAAgB,EAAG,EAAG,EAAG,IACzCiD,EAAO,GAAK,IAAIjD,IAAgB,IAAM,EAAG,EAAG,IAE5C,IAAIkD,EAAS,IAAIlD,IAAyB,UAC1CkD,EAAOb,eAAiB,IAAIrC,IAAgB,mBAG5C,IAAI4C,EAAM5C,IAAoBmD,eAAe,MAC3C,CACEC,MAAOP,EACPQ,MAAO,GACPJ,OAAQA,EACRK,MAAM,GAER3D,EAAO4D,GACTX,EAAIlB,SAAWwB,EAKf,IAAIM,EAAU,GACdA,EAAQ,GAAK,IAAIxD,IAAgB,EAAG,EAAG,EAAG,GAC1CwD,EAAQ,GAAK,IAAIxD,IAAgB,EAAG,GAAK,EAAG,IAC5CwD,EAAQ,GAAK,IAAIxD,IAAgB,EAAG,EAAG,EAAG,GAG1C,IAAIyD,EAAW,IAAIzD,IAAyB,YAC5CyD,EAASpB,eAAiB,IAAIrC,IAAgB,qBAE9C,IAAM0D,EAAU1D,IAAoB2D,eAAe,UACjD,CACEC,SAAU,KACVpD,OAAQ,IACRyC,OAAQO,IAEZE,EAAQhC,SAAW+B,EACnBC,EAAQG,OAASjB,EACjBc,EAAQ/C,SAASG,GAAK,GACtB4C,EAAQ/C,SAASC,GAAK,GACtB8C,EAAQ/C,SAASI,EAAI,KAErB,IAAI+C,EAAUJ,EAAQK,MAAM,WAC5BD,EAAQnD,SAASC,EAAI,GAErB,IAAIoD,EAAUN,EAAQK,MAAM,WAC5BC,EAAQrD,SAASI,GAAK,GAAM,KAE5B,IAAIkD,EAAUH,EAAQC,MAAM,WAC5BE,EAAQtD,SAASI,GAAK,GAAM,KAI5B,IAAImD,EAAY,IAAIlE,IAAkB,iBAAkB,aAAc,GAAIA,IAAkBmE,oBAAqBnE,IAAkBoE,yBAC/HC,EAAY,GAKhBA,EAAUvB,KAAK,CACbwB,MAAO,EACPC,MAAO,IAITF,EAAUvB,KAAK,CACbwB,MAAO,GACPC,MAAO,EAAItE,KAAKC,KAKlBgE,EAAUM,QAAQH,GAElBX,EAAQe,WAAa,GACrBf,EAAQe,WAAW3B,KAAKoB,GAExBJ,EAAQW,WAAa,GACrBX,EAAQW,WAAW3B,KAAKoB,GAExBF,EAAQS,WAAa,GACrBT,EAAQS,WAAW3B,KAAKoB,GAExBD,EAAQQ,WAAa,GACrBR,EAAQQ,WAAW3B,KAAKoB,GAExB,IAAIQ,EAAU,IAAI1E,IAAkB,UAAW,aAAc,GAAIA,IAAkBmE,oBAAqBnE,IAAkBoE,yBAEtHO,EAAU,GA6Bd,OA3BAA,EAAQ7B,KAAK,CACXwB,MAAO,EACPC,OAAQ,IAGVI,EAAQ7B,KAAK,CACXwB,MAAO,IACPC,MAAO,IAGTG,EAAQF,QAAQG,GAEhB/B,EAAI6B,WAAa,GACjB7B,EAAI6B,WAAW3B,KAAK4B,GACpB/E,EAAMiF,eAAehC,EAAK,EAAG,KAAK,GAGlCjD,EAAMiF,eAAelB,EAAS,EAAG,IAAI,GACrC/D,EAAMiF,eAAed,EAAS,EAAG,IAAI,GACrCnE,EAAMiF,eAAeZ,EAAS,EAAG,IAAI,GACrCrE,EAAMiF,eAAeX,EAAS,EAAG,IAAI,GAO9BrB,EA9MCiC,GACVjC,EAAID,SAAW,IAAI3C,KAAiBC,KAAKC,GAAK,EAAG,EAAG,GACpD0C,EAAIjC,SAASI,EAAI,IACjB6B,EAAIjC,SAASC,EAAI,EACjBgC,EAAIjC,SAASG,EAAI,EA+Mfd,IAAoB8E,gBAAgB,MAAO,YAAa,eAAgBnF,GAAOoF,MAAK,SAACC,GACnF,IAAIC,EAAOD,EAAOE,OAAO,GAGzB,SAASC,EAAKC,EAAMC,GAClBC,KAAKF,KAAOA,EACZE,KAAKD,KAAOA,EAJdJ,EAAKM,QAAU,IAAIvF,IAAgB,KAAO,KAAO,MACjDL,EAAMiF,eAAeI,EAAOQ,UAAU,GAAI,EAAG,KAAK,EAAM,GAQxD,IAAIC,EAAQ,GACZA,EAAM3C,KAAK,IAAIqC,EAAK,GAAI,IACxBM,EAAM3C,KAAK,IAAIqC,GAAM,GAAI,OACzBM,EAAM3C,KAAK,IAAIqC,GAAM,GAAI,OACzBM,EAAM3C,KAAK,IAAIqC,EAAK,GAAI,OACxBM,EAAM3C,KAAK,IAAIqC,GAAM,IAAK,OAC1BM,EAAM3C,KAAK,IAAIqC,GAAM,GAAI,OACzBM,EAAM3C,KAAK,IAAIqC,EAAK,GAAI,OACxBM,EAAM3C,KAAK,IAAIqC,GAAM,GAAI,OACzBM,EAAM3C,KAAK,IAAIqC,EAAK,EAAG,KAEvBF,EAAKtE,SAAW,IAAIX,KAAiB,EAAG,EAAG,GAC3CiF,EAAKS,OAAO1F,IAAa2F,EAAG3F,IAAc4F,WAAW,IAAK5F,IAAc6F,OACxE,IAAIC,EAAgBb,EAAKc,mBAAmBhC,QAExCiC,EAAW,EAEXC,EAAI,EAERtG,EAAMuG,yBAAyBC,KAAI,WACjClB,EAAKmB,QAAQ,EAAG,EAJP,OAKTJ,GALS,MAOMP,EAAMQ,GAAGZ,OACtBJ,EAAKS,OAAO1F,IAAa2F,EAAG3F,IAAc4F,UAAUH,EAAMQ,GAAGb,MAAOpF,IAAc6F,OAClFI,GAAK,EAEK,KADVA,GAAKR,EAAMY,UAETL,EAAW,EACXf,EAAKtE,SAAW,IAAIX,KAAiB,EAAG,EAAG,GAC3CiF,EAAKc,mBAAqBD,EAAc/B,gBAQlD,WAEE,IAAIuC,EAAkB,CACpB,IAAItG,IAAgB,EAAG,EAAG,GAC1B,IAAIA,IAAgB,GAAK,EAAG,GAC5B,IAAIA,IAAgB,GAAK,GAAK,GAC9B,IAAIA,IAAgB,GAAK,GAAK,GAC9B,IAAIA,IAAgB,GAAK,IAAM,GAC/B,IAAIA,IAAgB,IAAM,GAAK,GAC/B,IAAIA,IAAgB,IAAM,GAAK,GAC/B,IAAIA,IAAgB,IAAM,GAAK,IAIlBA,IAAoBuG,YAAY,WAAY,CAAEnD,MAAOkD,EAAiBE,gBAAiBxG,IAAayG,aAC1G9F,SAAW,IAAIX,KAAiB,EAAG,GAAI,GAEhD,IAAI0G,EAAiB,IAAI1G,IAAuB,YAAa,IAAML,GAEnE+G,EAAeC,gBAAkB,IAAI3G,IAAgB,oBAAqBL,GAG1E+G,EAAeE,QAAU,IAAI5G,KAAiB,EAAG,IAAM,GACvD0G,EAAeG,WAAa,IAAI7G,KAAiB,IAAM,GAAI,KAC3D0G,EAAeI,WAAa,IAAI9G,IAAgB,IAAM,EAAG,KAIzD0G,EAAeK,OAAS,IAAI/G,IAAe,GAAK,GAAK,EAAK,GAC1D0G,EAAeM,OAAS,IAAIhH,IAAe,GAAK,GAAK,EAAK,GAC1D0G,EAAeO,UAAY,IAAIjH,IAAe,EAAG,EAAG,GAAK,GAGzD0G,EAAeQ,QAAU,GACzBR,EAAeS,QAAU,GAIzBT,EAAeU,YAAc,IAG7BV,EAAeW,SAAW,KAI1BX,EAAeY,UAAYtH,IAAuBuH,iBAGlDb,EAAec,QAAU,IAAIxH,IAAgB,GAAI,KAAM,GAGvD0G,EAAee,WAAa,IAAIzH,KAAiB,EAAG,EAAG,GACvD0G,EAAegB,WAAa,IAAI1H,IAAgB,EAAG,GAAI,GAGvD0G,EAAeiB,gBAAkB,EACjCjB,EAAekB,gBAAkB3H,KAAKC,GAGtCwG,EAAemB,aAAe,EAC9BnB,EAAeoB,aAAe,EAC9BpB,EAAeqB,YAAc,KAE7BrB,EAAesB,QA3TFC,GAKf,SAASzF,IACP,IAAI0F,EA0BN,WACE,IAAIA,EAAOlI,IAAoB2D,eAAe,OAAQ,CACpDC,SAAU,IACVpD,OAAQ,IACR2H,aAAc,IAEhBD,EAAK3C,QAAQ3E,EAAI,IACjBsH,EAAKvF,SAAS7B,EAAIb,KAAKC,GAAK,EAC5BgI,EAAKvH,SAASI,EAAI,KAElB,IAAMqH,EAAU,IAAIpI,IAAyB,WAI7C,OAHAoI,EAAQ/F,eAAiB,IAAIrC,IAAgB,sDAC7CkI,EAAKxG,SAAW0G,EAETF,EAxCIG,GACPC,EAMN,WACE,IAAMC,EAAS,IAAIvI,IAAyB,UAC5CuI,EAAOlG,eAAiB,IAAIrC,IAAgB,yBAG5C,IAAIiD,EAAS,GACbA,EAAO,GAAK,IAAIjD,IAAgB,GAAK,EAAK,IAAM,GAChDiD,EAAO,GAAK,IAAIjD,IAAgB,EAAK,EAAK,IAAM,GAChDiD,EAAO,GAAK,IAAIjD,IAAgB,IAAM,EAAK,GAAK,GAChDiD,EAAO,GAAK,IAAIjD,IAAgB,IAAM,EAAK,EAAK,GAEhD,IAAIsI,EAAMtI,IAAoBiB,UAAU,MAAO,CAAEgC,OAAQA,EAAQK,MAAM,IAIvE,OAHAgF,EAAI5G,SAAW6G,EACfD,EAAI3H,SAASI,EAAI,GAEVuH,EArBGE,GAEV,OAAOxI,IAAayI,YAAY,CAACP,EAAMI,IAAM,GAAM,EAAO,MAAM,GAAO,GAuTzE,OAAO3I,EAsBM+I,MAjBf,WAEE,OACE,sBAAKC,UAAU,MAAf,UACE,qBAAKA,UAAU,yDAAf,SACE,qBAAKA,UAAU,aAAf,gDAIF,qBAAKA,UAAU,OAAf,SACE,cAAC,IAAD,CAAgBC,WAAS,EAAClJ,aAAcA,EAAcmJ,GAAG,mBChZlDC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBjE,MAAK,YAAkD,IAA/CkE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.96512450.chunk.js","sourcesContent":["\nimport * as BABYLON from '@babylonjs/core';\nimport { BoxParticleEmitter, ParticleSystem, SceneLoaderAnimationGroupLoadingMode } from '@babylonjs/core';\nimport { defaultUboDeclaration } from '@babylonjs/core/Shaders/ShadersInclude/defaultUboDeclaration';\nimport SceneComponent from 'babylonjs-hook';\nimport * as earcut from 'earcut';\nimport './App.css';\n\n\n\n\nfunction onSceneReady(scene) {\n  var canvas = scene.getEngine().getRenderingCanvas();\n\n  var camera = new BABYLON.ArcRotateCamera(\"camera\", -Math.PI / 2,\n    Math.PI / 2.5, 50, new BABYLON.Vector3(0, 0, 0), scene);\n  camera.upperBetaLimit = Math.PI / 2.1;\n  camera.attachControl(canvas, true);\n\n  var light = new BABYLON.HemisphericLight(\"light\", new BABYLON.Vector3(0, 1, 0), scene);\n  light.intensity = 0.7;\n\n  var spriteManagerTrees = new BABYLON.SpriteManager(\"treesManager\", \"objects/palmtree.png\", 2000, { width: 512, height: 1024 }, scene);\n\n  //We create trees at random positions\n  for (let i = 0; i < 500; i++) {\n    const tree = new BABYLON.Sprite(\"tree\", spriteManagerTrees);\n    tree.position.x = Math.random() * (-30);\n    tree.position.z = Math.random() * 20 + 8;\n    tree.position.y = 0.5;\n  }\n\n  for (let i = 0; i < 500; i++) {\n    const tree = new BABYLON.Sprite(\"tree\", spriteManagerTrees);\n    tree.position.x = Math.random() * (25) + 7;\n    tree.position.z = Math.random() * -35 + 8;\n    tree.position.y = 0.5;\n  }\n\n\n\n  var skybox = BABYLON.MeshBuilder.CreateBox(\"skybox\", { size: 150 }, scene);\n  var skyboxMaterial = new BABYLON.StandardMaterial(\"skyBox\", scene);\n  skyboxMaterial.backFaceCulling = false;\n  skyboxMaterial.reflectionTexture = new BABYLON.CubeTexture(\"objects/skybox/skybox\", scene);\n  skyboxMaterial.reflectionTexture.coordinatesMode = BABYLON.Texture.SKYBOX_MODE;\n  skyboxMaterial.diffuseColor = new BABYLON.Color3(0, 0, 0);\n  skyboxMaterial.specularColor = new BABYLON.Color3(0, 0, 0);\n  skybox.material = skyboxMaterial;\n\n  var music = new BABYLON.Sound(\"music\", \"objects/music.wav\", scene, null, {\n    loop: true,\n    volume: 0.3,\n    autoplay: true\n  });\n  music.play();\n\n  var ground = createGround();\n\n  var house = createHouse();\n  house.position.z = -3;\n\n  var houses = [];\n\n  houses[0] = house.createInstance(\"house\")\n  houses[0].rotation.y = 10;\n  houses[0].position.x = -2\n  createHouse().position = new BABYLON.Vector3(1, 0, 3);\n\n  var car = createCar();\n  car.rotation = new BABYLON.Vector3(-Math.PI / 2, 0, 0);\n  car.position.y = 0.16;\n  car.position.x = 1;\n  car.position.z = 1;\n\n  var dude = myDude();\n\n  var fountain = generateFountain();\n\n\n  //create functions\n\n  function createHouse() {\n    var roof = createRoof();\n    var box = createBox();\n\n    return BABYLON.Mesh.MergeMeshes([roof, box], true, false, null, false, true);\n  }\n\n\n  function createBox() {\n    const boxMat = new BABYLON.StandardMaterial(\"boxMat\");\n    boxMat.diffuseTexture = new BABYLON.Texture(\"objects/cubehouse.png\");\n\n    //House wall texture for each wall side\n    var faceUV = [];\n    faceUV[0] = new BABYLON.Vector4(0.5, 0.0, 0.75, 1.0); //rear side\n    faceUV[1] = new BABYLON.Vector4(0.0, 0.0, 0.25, 1.0); //front side\n    faceUV[2] = new BABYLON.Vector4(0.25, 0.0, 0.5, 1.0); //front side\n    faceUV[3] = new BABYLON.Vector4(0.75, 0.0, 1.0, 1.0); //front side\n\n    var box = BABYLON.MeshBuilder.CreateBox(\"box\", { faceUV: faceUV, wrap: true });\n    box.material = boxMat;\n    box.position.y = 0.5;\n\n    return box;\n  };\n\n\n  function createRoof() {\n    var roof = BABYLON.MeshBuilder.CreateCylinder(\"root\", {\n      diameter: 1.3,\n      height: 1.2,\n      tessellation: 3\n    });\n    roof.scaling.x = 0.75;\n    roof.rotation.z = Math.PI / 2;\n    roof.position.y = 1.22;\n\n    const roofMat = new BABYLON.StandardMaterial(\"roofMat\");\n    roofMat.diffuseTexture = new BABYLON.Texture(\"https://assets.babylonjs.com/environments/roof.jpg\");\n    roof.material = roofMat;\n\n    return roof;\n  };\n\n\n  function createGround() {\n    var ground = BABYLON.MeshBuilder.CreateGroundFromHeightMap(\"ground\", \"https://assets.babylonjs.com/environments/villageheightmap.png\", {\n      width: 120,\n      height: 120,\n      subdivisions: 20,\n      minHeight: 0,\n      maxHeight: 10\n    });\n    var groundMat = new BABYLON.StandardMaterial(\"groundMat\");\n    groundMat.diffuseTexture = new BABYLON.Texture(\"https://assets.babylonjs.com/environments/valleygrass.png\");\n\n    groundMat.diffuseColor = new BABYLON.Color3(0, 1, 0);\n    ground.material = groundMat;\n  }\n\n  function createCar() {\n    const outline = [\n      new BABYLON.Vector3(-0.3, 0, -0.1),\n      new BABYLON.Vector3(0.2, 0, -0.1),\n    ]\n\n    //curved front\n    for (let i = 0; i < 20; i++) {\n      outline.push(new BABYLON.Vector3(0.2 * Math.cos(i * Math.PI / 40), 0, 0.2 * Math.sin(i * Math.PI / 40) - 0.1));\n    }\n\n    //Top\n    outline.push(new BABYLON.Vector3(0, 0, 0.1));\n    outline.push(new BABYLON.Vector3(-0.3, 0, 0.1));\n\n    var faceUV = [];\n    faceUV[0] = new BABYLON.Vector4(0, 0.5, 0.38, 1);\n    faceUV[1] = new BABYLON.Vector4(0, 0, 1, 0.5);\n    faceUV[2] = new BABYLON.Vector4(0.38, 1, 0, 0.5);\n\n    var carMat = new BABYLON.StandardMaterial(\"carMat\");\n    carMat.diffuseTexture = new BABYLON.Texture(\"objects/car.png\");\n\n\n    var car = BABYLON.MeshBuilder.ExtrudePolygon(\"car\",\n      {\n        shape: outline,\n        depth: 0.2,\n        faceUV: faceUV,\n        wrap: true\n      },\n      scene, earcut);\n    car.material = carMat;\n\n\n\n    //Wheel part\n    var wheelUV = [];\n    wheelUV[0] = new BABYLON.Vector4(0, 0, 1, 1);\n    wheelUV[1] = new BABYLON.Vector4(0, 0.5, 0, 0.5);\n    wheelUV[2] = new BABYLON.Vector4(0, 0, 1, 1);\n\n    //Wheel material\n    var wheelMat = new BABYLON.StandardMaterial(\"wheelMat\");\n    wheelMat.diffuseTexture = new BABYLON.Texture(\"objects/wheel.png\");\n\n    const wheelRB = BABYLON.MeshBuilder.CreateCylinder(\"wheelRB\",\n      {\n        diameter: 0.125,\n        height: 0.05,\n        faceUV: wheelUV\n      });\n    wheelRB.material = wheelMat;\n    wheelRB.parent = car;\n    wheelRB.position.z = -0.1;\n    wheelRB.position.x = -0.2;\n    wheelRB.position.y = 0.035;\n\n    var wheelRF = wheelRB.clone(\"wheelRF\");\n    wheelRF.position.x = 0.1;\n\n    var wheelLB = wheelRB.clone(\"wheelLB\");\n    wheelLB.position.y = -0.2 - 0.035;\n\n    var wheelLF = wheelRF.clone(\"wheelLF\");\n    wheelLF.position.y = -0.2 - 0.035;\n\n\n    //Animate wheel\n    var animWheel = new BABYLON.Animation(\"wheelAnimation\", \"rotation.y\", 30, BABYLON.Animation.ANIMATIONTYPE_FLOAT, BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE);\n    var wheelKeys = [];\n\n    //Animation key\n\n    //Frame 0 = rotation 0\n    wheelKeys.push({\n      frame: 0,\n      value: 0\n    });\n\n    //Animation key 30 (1 sec @ 30fps) = rotation is 2PI (360)\n    wheelKeys.push({\n      frame: 30,\n      value: 2 * Math.PI\n    })\n\n\n    //Set keys\n    animWheel.setKeys(wheelKeys);\n\n    wheelRB.animations = [];\n    wheelRB.animations.push(animWheel);\n\n    wheelRF.animations = [];\n    wheelRF.animations.push(animWheel);\n\n    wheelLB.animations = [];\n    wheelLB.animations.push(animWheel);\n\n    wheelLF.animations = [];\n    wheelLF.animations.push(animWheel);\n\n    var animCar = new BABYLON.Animation(\"carAnim\", \"position.x\", 30, BABYLON.Animation.ANIMATIONTYPE_FLOAT, BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE);\n\n    var carKeys = [];\n\n    carKeys.push({\n      frame: 0,\n      value: -4\n    });\n\n    carKeys.push({\n      frame: 150,\n      value: 4\n    });\n\n    animCar.setKeys(carKeys);\n\n    car.animations = [];\n    car.animations.push(animCar);\n    scene.beginAnimation(car, 0, 150, true);\n\n\n    scene.beginAnimation(wheelRB, 0, 30, true);\n    scene.beginAnimation(wheelRF, 0, 30, true);\n    scene.beginAnimation(wheelLB, 0, 30, true);\n    scene.beginAnimation(wheelLF, 0, 30, true);\n\n\n    // Car Animation\n\n\n\n    return car;\n  };\n\n  function myDude() {\n\n    BABYLON.SceneLoader.ImportMeshAsync(\"him\", \"/objects/\", \"dude.babylon\", scene).then((result) => {\n      var dude = result.meshes[0];\n      dude.scaling = new BABYLON.Vector3(0.008, 0.008, 0.008);\n      scene.beginAnimation(result.skeletons[0], 0, 100, true, 1.0);\n      function walk(turn, dist) {\n        this.turn = turn;\n        this.dist = dist;\n      }\n\n      //camera.parent = dude;\n\n      var track = [];\n      track.push(new walk(86, 7));\n      track.push(new walk(-85, 14.8));\n      track.push(new walk(-93, 16.5));\n      track.push(new walk(48, 25.5));\n      track.push(new walk(-112, 30.5));\n      track.push(new walk(-72, 33.2));\n      track.push(new walk(42, 37.5));\n      track.push(new walk(-98, 45.2));\n      track.push(new walk(0, 47));\n\n      dude.position = new BABYLON.Vector3(-6, 0, 0);\n      dude.rotate(BABYLON.Axis.Y, BABYLON.Tools.ToRadians(-95), BABYLON.Space.LOCAL);\n      var startRotation = dude.rotationQuaternion.clone()\n\n      let distance = 0;\n      let step = 0.015;\n      let p = 0;\n\n      scene.onBeforeRenderObservable.add(() => {\n        dude.movePOV(0, 0, step);\n        distance += step;\n\n        if (distance > track[p].dist) {\n          dude.rotate(BABYLON.Axis.Y, BABYLON.Tools.ToRadians(track[p].turn), BABYLON.Space.LOCAL);\n          p += 1;\n          p %= track.length;\n          if (p === 0) {\n            distance = 0;\n            dude.position = new BABYLON.Vector3(-6, 0, 0);\n            dude.rotationQuaternion = startRotation.clone();\n          }\n        }\n      });\n    });\n\n  };\n\n  function generateFountain() {\n\n    var fountainOutline = [\n      new BABYLON.Vector3(0, 0, 0),\n      new BABYLON.Vector3(0.5, 0, 0),\n      new BABYLON.Vector3(0.5, 0.2, 0),\n      new BABYLON.Vector3(0.4, 0.2, 0),\n      new BABYLON.Vector3(0.4, 0.05, 0),\n      new BABYLON.Vector3(0.05, 0.1, 0),\n      new BABYLON.Vector3(0.05, 0.8, 0),\n      new BABYLON.Vector3(0.15, 0.9, 0)\n    ];\n\n    //Create lathe fountain\n    var fountain = BABYLON.MeshBuilder.CreateLathe('fountain', { shape: fountainOutline, sideOrientation: BABYLON.Mesh.DOUBLESIDE });\n    fountain.position = new BABYLON.Vector3(-4, 0, -6);\n\n    var particleSystem = new BABYLON.ParticleSystem('particles', 5000, scene);\n\n    particleSystem.particleTexture = new BABYLON.Texture(\"objects/Flare.png\", scene);\n\n    //Particle source\n    particleSystem.emitter = new BABYLON.Vector3(-4, 0.8, -6); // The starting object\n    particleSystem.minEmitBox = new BABYLON.Vector3(-0.01, 0, -0.01); // Starting all from\n    particleSystem.maxEmitBox = new BABYLON.Vector3(0.01, 0, 0.01); // Particle destination\n\n\n    //Colors of all particles\n    particleSystem.color1 = new BABYLON.Color4(0.7, 0.8, 1.0, 1.0);\n    particleSystem.color2 = new BABYLON.Color4(0.2, 0.5, 1.0, 1.0);\n    particleSystem.colorDead = new BABYLON.Color4(0, 0, 0.2, 0.0); // Color before dead\n\n    //Random size of particles in range\n    particleSystem.minSize = 0.1;\n    particleSystem.maxSize = 0.5;\n\n    //Particle lifetime\n    //particleSystem.minLifeTime = 2;\n    particleSystem.maxLifeTime = 5.5;\n\n    //Emision rate\n    particleSystem.emitRate = 1500;\n\n\n    // Blend mode : BLENDMODE_ONEONE, or BLENDMODE_STANDARD\n    particleSystem.blendMode = BABYLON.ParticleSystem.BLENDMODE_ONEONE;\n\n    // Set the gravity of all particles\n    particleSystem.gravity = new BABYLON.Vector3(0, -9.81, 0);\n\n    // Direction of each particle after it has been emitted\n    particleSystem.direction1 = new BABYLON.Vector3(-2, 8, 2);\n    particleSystem.direction2 = new BABYLON.Vector3(2, 8, -2);\n\n    // Angular speed, in radians\n    particleSystem.minAngularSpeed = 0;\n    particleSystem.maxAngularSpeed = Math.PI;\n\n    // Speed\n    particleSystem.minEmitPower = 1;\n    particleSystem.maxEmitPower = 3;\n    particleSystem.updateSpeed = 0.025;\n\n    particleSystem.start();\n  };\n\n\n\n  return scene\n};\n\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark sticky-top\">\n        <div className=\"text-light\">\n          HELLO GUYS. MY NAME IS GOCH-GOCH\n        </div>\n      </nav>\n      <div className=\"mt-5\">\n        <SceneComponent antialias onSceneReady={onSceneReady} id=\"myCanvas\" />\n      </div>\n    </div>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}